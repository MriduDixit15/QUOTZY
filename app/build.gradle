apply plugin: 'com.android.application'
/*   Copyright [2018] [Sayi Manoj Sugavasi]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.*/
android {
    signingConfigs {
        releaseconfig {
            def props = new Properties()
            file("Cred.properties").withInputStream { props.load(it) }
            keyAlias props.getProperty("keyAlias")
            keyPassword props.getProperty("keyPassword")
            storeFile file(props.getProperty("storeFile"))
            storePassword props.getProperty("storePassword")
        }
    }
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.hustler.quote"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 10
        versionName "1.000009"
        resConfigs "en"
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()
            shrinkResources true
            signingConfig signingConfigs.releaseconfig
        }
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
//                output.outputFileName = new File(
//                        output.outputFileName.parent,
//                        output.outputFileName.name.replace("$APK_EXTENSION", "$APK_PREFIX" + "$SEPERATOR" + getDate() + "$APK_EXTENSION"))
                outputFileName = "${variant.name}-${variant.versionName}.apk"
            }
    }
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'armeabi', 'armeabi-v7a', 'mips'
//            universalApk false
//        }
//    }
}
ext {
    supportLibVersion = '27.1.1'
    googleLibVersion = '15.0.0'
    SEPERATOR = '-'
    APK_EXTENSION = '.apk'
    RELEASE = 'release'
    DEBUG = 'debug'
    APK_PREFIX = 'quotzy'
}


def getDate() {
    return new Date().format('ddMMMyy')
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.google.firebase:firebase-messaging:$googleLibVersion"
    implementation "com.google.firebase:firebase-crash:$googleLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:exifinterface:$supportLibVersion"
    implementation "com.android.support:palette-v7:$supportLibVersion"
    implementation 'eu.the4thfloor.volley:com.android.volley:2015.05.28'
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation "com.android.support:support-v13:$supportLibVersion"
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation "com.android.support:customtabs:$supportLibVersion"
    implementation 'org.jetbrains:annotations-java5:15.0'
    implementation "com.google.android.gms:play-services-ads:$googleLibVersion"
    implementation 'com.pes.materialcolorpicker:library:1.2.0'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'
}
apply plugin: 'com.google.gms.google-services'